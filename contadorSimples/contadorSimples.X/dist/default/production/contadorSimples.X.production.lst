

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Dec 28 21:35:12 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F628A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     000A                     PCLATH          equ	10	;# 
    64     000B                     INTCON          equ	11	;# 
    65     000C                     PIR1            equ	12	;# 
    66     000E                     TMR1            equ	14	;# 
    67     000E                     TMR1L           equ	14	;# 
    68     000F                     TMR1H           equ	15	;# 
    69     0010                     T1CON           equ	16	;# 
    70     0011                     TMR2            equ	17	;# 
    71     0012                     T2CON           equ	18	;# 
    72     0015                     CCPR1           equ	21	;# 
    73     0015                     CCPR1L          equ	21	;# 
    74     0016                     CCPR1H          equ	22	;# 
    75     0017                     CCP1CON         equ	23	;# 
    76     0018                     RCSTA           equ	24	;# 
    77     0019                     TXREG           equ	25	;# 
    78     001A                     RCREG           equ	26	;# 
    79     001F                     CMCON           equ	31	;# 
    80     0081                     OPTION_REG      equ	129	;# 
    81     0085                     TRISA           equ	133	;# 
    82     0086                     TRISB           equ	134	;# 
    83     008C                     PIE1            equ	140	;# 
    84     008E                     PCON            equ	142	;# 
    85     0092                     PR2             equ	146	;# 
    86     0098                     TXSTA           equ	152	;# 
    87     0099                     SPBRG           equ	153	;# 
    88     009A                     EEDATA          equ	154	;# 
    89     009B                     EEADR           equ	155	;# 
    90     009C                     EECON1          equ	156	;# 
    91     009D                     EECON2          equ	157	;# 
    92     009F                     VRCON           equ	159	;# 
    93     0000                     INDF            equ	0	;# 
    94     0001                     TMR0            equ	1	;# 
    95     0002                     PCL             equ	2	;# 
    96     0003                     STATUS          equ	3	;# 
    97     0004                     FSR             equ	4	;# 
    98     0005                     PORTA           equ	5	;# 
    99     0006                     PORTB           equ	6	;# 
   100     000A                     PCLATH          equ	10	;# 
   101     000B                     INTCON          equ	11	;# 
   102     000C                     PIR1            equ	12	;# 
   103     000E                     TMR1            equ	14	;# 
   104     000E                     TMR1L           equ	14	;# 
   105     000F                     TMR1H           equ	15	;# 
   106     0010                     T1CON           equ	16	;# 
   107     0011                     TMR2            equ	17	;# 
   108     0012                     T2CON           equ	18	;# 
   109     0015                     CCPR1           equ	21	;# 
   110     0015                     CCPR1L          equ	21	;# 
   111     0016                     CCPR1H          equ	22	;# 
   112     0017                     CCP1CON         equ	23	;# 
   113     0018                     RCSTA           equ	24	;# 
   114     0019                     TXREG           equ	25	;# 
   115     001A                     RCREG           equ	26	;# 
   116     001F                     CMCON           equ	31	;# 
   117     0081                     OPTION_REG      equ	129	;# 
   118     0085                     TRISA           equ	133	;# 
   119     0086                     TRISB           equ	134	;# 
   120     008C                     PIE1            equ	140	;# 
   121     008E                     PCON            equ	142	;# 
   122     0092                     PR2             equ	146	;# 
   123     0098                     TXSTA           equ	152	;# 
   124     0099                     SPBRG           equ	153	;# 
   125     009A                     EEDATA          equ	154	;# 
   126     009B                     EEADR           equ	155	;# 
   127     009C                     EECON1          equ	156	;# 
   128     009D                     EECON2          equ	157	;# 
   129     009F                     VRCON           equ	159	;# 
   130                           
   131                           	psect	idataBANK0
   132     07A9                     __pidataBANK0:
   133                           
   134                           ;initializer for _display
   135     07A9  343F               	retlw	63
   136     07AA  3406               	retlw	6
   137     07AB  345B               	retlw	91
   138     07AC  344F               	retlw	79
   139     07AD  3466               	retlw	102
   140     07AE  346D               	retlw	109
   141     07AF  347D               	retlw	125
   142     07B0  3407               	retlw	7
   143     07B1  347F               	retlw	127
   144     07B2  3467               	retlw	103
   145                           
   146                           	psect	nvCOMMON
   147     0075                     __pnvCOMMON:
   148     0075                     _segmento:
   149     0075                     	ds	1
   150     0006                     _PORTB          set	6
   151     0086                     _TRISB          set	134
   152                           
   153                           	psect	cinit
   154     07E8                     start_initialization:	
   155                           ; #config settings
   156                           
   157     07E8                     __initialization:
   158                           
   159                           ; Initialize objects allocated to BANK0
   160     07E8  27A9               	fcall	__pidataBANK0	;fetch initializer
   161     07E9  00A0               	movwf	__pdataBANK0& (0+127)
   162     07EA  27AA               	fcall	__pidataBANK0+1	;fetch initializer
   163     07EB  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   164     07EC  27AB               	fcall	__pidataBANK0+2	;fetch initializer
   165     07ED  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   166     07EE  27AC               	fcall	__pidataBANK0+3	;fetch initializer
   167     07EF  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   168     07F0  27AD               	fcall	__pidataBANK0+4	;fetch initializer
   169     07F1  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   170     07F2  27AE               	fcall	__pidataBANK0+5	;fetch initializer
   171     07F3  00A5               	movwf	(__pdataBANK0+5)& (0+127)
   172     07F4  27AF               	fcall	__pidataBANK0+6	;fetch initializer
   173     07F5  00A6               	movwf	(__pdataBANK0+6)& (0+127)
   174     07F6  27B0               	fcall	__pidataBANK0+7	;fetch initializer
   175     07F7  00A7               	movwf	(__pdataBANK0+7)& (0+127)
   176     07F8  27B1               	fcall	__pidataBANK0+8	;fetch initializer
   177     07F9  00A8               	movwf	(__pdataBANK0+8)& (0+127)
   178     07FA  27B2               	fcall	__pidataBANK0+9	;fetch initializer
   179     07FB  00A9               	movwf	(__pdataBANK0+9)& (0+127)
   180                           
   181                           ; Clear objects allocated to COMMON
   182     07FC  01F3               	clrf	__pbssCOMMON& (0+127)
   183     07FD  01F4               	clrf	(__pbssCOMMON+1)& (0+127)
   184     07FE                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187     07FE                     __end_of__initialization:
   188     07FE  0183               	clrf	3
   189     07FF  2FB3               	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	bssCOMMON
   192     0073                     __pbssCOMMON:
   193     0073                     _contador:
   194     0073                     	ds	2
   195                           
   196                           	psect	dataBANK0
   197     0020                     __pdataBANK0:
   198     0020                     _display:
   199     0020                     	ds	10
   200                           
   201                           	psect	cstackCOMMON
   202     0070                     __pcstackCOMMON:
   203     0070                     ?_main:
   204     0070                     ??_main:	
   205                           ; 1 bytes @ 0x0
   206                           
   207                           
   208                           ; 1 bytes @ 0x0
   209     0070                     	ds	3
   210                           
   211                           	psect	maintext
   212     07B3                     __pmaintext:	
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 22 in file "contadorSimples.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;		None
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   227 ;; Tracked objects:
   228 ;;		On entry : B00/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   232 ;;      Params:         0       0       0       0
   233 ;;      Locals:         0       0       0       0
   234 ;;      Temps:          3       0       0       0
   235 ;;      Totals:         3       0       0       0
   236 ;;Total ram usage:        3 bytes
   237 ;; This function calls:
   238 ;;		Nothing
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244     07B3                     _main:	
   245                           ;psect for function _main
   246                           
   247     07B3                     l584:	
   248                           ;incstack = 0
   249                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   250                           
   251     07B3  1683               	bsf	3,5	;RP0=1, select bank1
   252     07B4  1303               	bcf	3,6	;RP1=0, select bank1
   253     07B5  0186               	clrf	6	;volatile
   254     07B6  1283               	bcf	3,5	;RP0=0, select bank0
   255     07B7  1303               	bcf	3,6	;RP1=0, select bank0
   256     07B8  0186               	clrf	6	;volatile
   257     07B9                     l586:
   258     07B9  0873               	movf	_contador,w
   259     07BA  3E20               	addlw	(low (_display| 0))& (0+255)
   260     07BB  0084               	movwf	4
   261     07BC  1383               	bcf	3,7	;select IRP bank0
   262     07BD  0800               	movf	0,w
   263     07BE  00F5               	movwf	_segmento
   264     07BF                     l588:
   265     07BF  0875               	movf	_segmento,w
   266     07C0  1283               	bcf	3,5	;RP0=0, select bank0
   267     07C1  1303               	bcf	3,6	;RP1=0, select bank0
   268     07C2  0086               	movwf	6	;volatile
   269     07C3                     l590:
   270     07C3  3006               	movlw	6
   271     07C4  00F2               	movwf	??_main+2
   272     07C5  3013               	movlw	19
   273     07C6  00F1               	movwf	??_main+1
   274     07C7  30AD               	movlw	173
   275     07C8  00F0               	movwf	??_main
   276     07C9                     u37:
   277     07C9  0BF0               	decfsz	??_main,f
   278     07CA  2FC9               	goto	u37
   279     07CB  0BF1               	decfsz	??_main+1,f
   280     07CC  2FC9               	goto	u37
   281     07CD  0BF2               	decfsz	??_main+2,f
   282     07CE  2FC9               	goto	u37
   283     07CF  2FD0               	nop2
   284     07D0                     l592:
   285     07D0  3001               	movlw	1
   286     07D1  07F3               	addwf	_contador,f
   287     07D2  1803               	skipnc
   288     07D3  0AF4               	incf	_contador+1,f
   289     07D4  3000               	movlw	0
   290     07D5  07F4               	addwf	_contador+1,f
   291     07D6                     l594:
   292     07D6  0874               	movf	_contador+1,w
   293     07D7  3A80               	xorlw	128
   294     07D8  00FF               	movwf	btemp+1
   295     07D9  3080               	movlw	128
   296     07DA  027F               	subwf	btemp+1,w
   297     07DB  1D03               	skipz
   298     07DC  2FDF               	goto	u25
   299     07DD  300A               	movlw	10
   300     07DE  0273               	subwf	_contador,w
   301     07DF                     u25:
   302     07DF  1803               	skipnc
   303     07E0  2FE2               	goto	u21
   304     07E1  2FE3               	goto	u20
   305     07E2                     u21:
   306     07E2  2FE4               	goto	l598
   307     07E3                     u20:
   308     07E3  2FB9               	goto	l586
   309     07E4                     l598:
   310     07E4  01F3               	clrf	_contador
   311     07E5  01F4               	clrf	_contador+1
   312     07E6  2FB9               	goto	l586
   313     07E7  2800               	ljmp	start
   314     07E8                     __end_of_main:
   315     0000                     ___latbits      equ	0
   316     007E                     btemp           set	126	;btemp
   317     007E                     wtemp0          set	126
   318                           
   319                           	psect	config
   320                           
   321                           ;Config register CONFIG @ 0x2007
   322                           ;	Oscillator Selection bits
   323                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   324                           ;	Watchdog Timer Enable bit
   325                           ;	WDTE = OFF, WDT disabled
   326                           ;	Power-up Timer Enable bit
   327                           ;	PWRTE = OFF, PWRT disabled
   328                           ;	RA5/MCLR/VPP Pin Function Select bit
   329                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   330                           ;	Brown-out Detect Enable bit
   331                           ;	BOREN = OFF, BOD disabled
   332                           ;	Low-Voltage Programming Enable bit
   333                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   334                           ;	Data EE Memory Code Protection bit
   335                           ;	CPD = OFF, Data memory code protection off
   336                           ;	Flash Program Memory Code Protection bit
   337                           ;	CP = OFF, Code protection off
   338     2007                     	org	8199
   339     2007  3F29               	dw	16169

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       6
    BANK0            80      0      10
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK2               48      0       0      0.0%
BITBANK2            48      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      0      10     12.5%
BITBANK0            80      0       0      0.0%
COMMON              14      3       6     42.9%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      16      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Dec 28 21:35:12 2024

                     u20 07E3                       u21 07E2                       u25 07DF  
                     u37 07C9                      l590 07C3                      l592 07D0  
                    l584 07B3                      l594 07D6                      l586 07B9  
                    l588 07BF                      l598 07E4                      fsr0 0004  
                    indf 0000                     _main 07B3                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086                    status 0003                    wtemp0 007E  
        __initialization 07E8             __end_of_main 07E8                   ??_main 0070  
__end_of__initialization 07FE           __pcstackCOMMON 0070             __pidataBANK0 07A9  
             __pnvCOMMON 0075               __pmaintext 07B3                  _display 0020  
   end_of_initialization 07FE      start_initialization 07E8              __pdataBANK0 0020  
            __pbssCOMMON 0073                ___latbits 0000                 _contador 0073  
               _segmento 0075  
